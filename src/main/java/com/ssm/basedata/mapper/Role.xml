<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.basedata.dao.RoleMapper">
	
	<resultMap type="com.ssm.basedata.entity.Role" id="RoleMap">
		<id column="c_id" jdbcType="INTEGER" property="id"/>
		<result column="C_NAME" jdbcType="VARCHAR" property="name"/>
		<result column="C_CODE" jdbcType="VARCHAR" property="code"/>
		<result column="C_STATUS" jdbcType="NUMERIC" property="status"/>
		<result column="C_REMARK" jdbcType="VARCHAR" property="remark"/>
		<result column="C_CREATER_ID" jdbcType="NUMERIC" property="createrId"/>
		<result column="C_CREATER_TIME" jdbcType="TIMESTAMP" property="createrTime"/>
		<result column="C_CREATER_IP" jdbcType="VARCHAR" property="createrIp"/>
		<result column="C_UPDATER_ID" jdbcType="NUMERIC" property="updaterId"/>
		<result column="C_UPDATER_TIME" jdbcType="TIMESTAMP" property="updaterTime"/>
		<result column="C_UPDATER_IP" jdbcType="VARCHAR" property="updaterIp"/>
		<result column="C_PROJECT_ID" jdbcType="NUMERIC" property="projectId"/>
	</resultMap>
	
	<select id="countList" parameterType="hashmap" resultType="long">
		select count(t.c_id) <include refid="pagefind"/>
	</select>
	
	<select id="findPageList" parameterType="hashmap" resultMap="RoleMap">
		select t.*, p.c_sys_name as projectName
		<include refid="pagefind"/>
	</select>
	
	<sql id="pagefind">
		from T_ROLE t 
			left join T_PROJECT p on t.c_project_id = p.c_id
			<if test="employeeId != null">
				left join T_ROLE_EMP re on t.c_id = re.c_role_id
			</if>
        <where>
        	<if test="id != null ">and t.c_id = #{id, jdbcType=INTEGER}</if>
        	<if test="name!=null and name!=''">and t.c_name like #{name, jdbcType=VARCHAR}</if>
        	<if test="code!=null and code!=''">and t.c_code = #{code, jdbcType=VARCHAR}</if>
        	<if test="projectId != null">and t.c_project_id = #{projectId, jdbcType=INTEGER}</if>
        	<if test="id != null">and t.c_id = #{id, jdbcType=INTEGER}</if>
        	<if test="employeeId != null">and re.c_employee_id = #{employeeId, jdbcType=INTEGER}</if>
        </where>
	</sql>
	
	<select id="findById" parameterType="Integer" resultMap="RoleMap">
		select t.* from T_ROLE t where t.c_id = #{id, jdbcType=INTEGER}
	</select>
	
	<insert id="addOne" parameterType="com.ssm.basedata.entity.Role" useGeneratedKeys="true" keyProperty="id" >
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
    		select common_sequence.nextval from dual
    	</selectKey>
		
        insert into T_ROLE
        	(
    			C_ID,
        		C_CODE,
        		C_NAME,
        		C_STATUS,
        		C_REMARK,
        		C_CREATER_ID,
        		C_CREATER_TIME,
        		C_CREATER_IP,
        		C_UPDATER_ID,
        		C_UPDATER_TIME,
        		C_UPDATER_IP,
        		C_PROJECT_ID
        	)  
            values
            (
            	#{id, jdbcType=INTEGER},
				#{code, jdbcType=VARCHAR} ,
				#{name, jdbcType=VARCHAR} ,
				#{status, jdbcType=NUMERIC} ,
				#{remark, jdbcType=VARCHAR} ,
				#{createrId, jdbcType=NUMERIC} ,
				#{createrTime, jdbcType=TIMESTAMP} ,
				#{createrIp, jdbcType=VARCHAR} ,
				#{updaterId, jdbcType=NUMERIC} ,
				#{updaterTime, jdbcType=TIMESTAMP} ,
				#{updaterIp, jdbcType=VARCHAR} ,
				#{projectId, jdbcType=NUMERIC} 
            )  
    </insert>
    
    <update id="updateOne" parameterType="com.ssm.basedata.entity.Role" >
        update T_ROLE set 
        	C_ID = #{id, jdbcType=INTEGER},
        	C_CODE = #{code, jdbcType=VARCHAR},
        	C_NAME = #{name, jdbcType=VARCHAR},
        	C_STATUS = #{status, jdbcType=NUMERIC},
        	C_REMARK = #{remark, jdbcType=VARCHAR},
        	C_CREATER_ID = #{createrId, jdbcType=NUMERIC},
        	C_CREATER_TIME = #{createrTime, jdbcType=TIMESTAMP},
        	C_CREATER_IP = #{createrIp, jdbcType=VARCHAR},
        	C_UPDATER_ID = #{updaterId, jdbcType=NUMERIC},
        	C_UPDATER_TIME = #{updaterTime, jdbcType=TIMESTAMP},
        	C_UPDATER_IP = #{updaterIp, jdbcType=VARCHAR},
        	C_PROJECT_ID = #{projectId, jdbcType=NUMERIC}
        where c_id =  #{id, jdbcType=INTEGER}
    </update>
    
    <delete id="delById" parameterType="Integer">
        delete from T_ROLE where c_id = #{id, jdbcType=INTEGER}
	</delete>
	
</mapper>
